@layer components {
  :root {
    --input-label-color: var(--text-high-emphasis);
    --input-label-color-disabled: var(--text-inactive);
    --input-label-color-invalid: var(--input-label-color);
    --input-label-size: var(--text-size-body);
    --input-label-line-height: var(--line-height-body);
    --input-label-weight: var(--font-weight-semi-bold);
    --input-label-weight-disabled: var(--input-label-weight);
    --input-label-weight-invalid: var(--input-label-weight);

    --input-field-color: var(--text-black);
    --input-field-color-disabled: var(--input-field-color);
    --input-field-color-invalid: var(--input-field-color);
    --input-field-placeholder: var(--text-medium-emphasis);
    --input-field-size: var(--text-size-body);
    --input-field-line-height: var(--line-height-body);
    --input-field-weight: var(--font-weight-normal);
    --input-field-weight-disabled: var(--input-field-weight);
    --input-field-weight-invalid: var(--input-field-weight);

    --input-field-surface: var(--surface-white);
    --input-field-surface-hover: var(--surface-primary-lightest);
    --input-field-surface-disabled: var(--input-field-surface);
    --input-field-surface-invalid: var(--input-field-surface);

    --input-field-border: var(--border-controls);
    --input-field-border-hover: var(--border-primary);
    --input-field-border-active: var(--border-primary);
    --input-field-border-disabled: var(--border-inactive);
    --input-field-border-invalid: var(--border-error);
    --input-field-border-focus: var(--border-attention);

    --input-helper-color: var(--text-medium-emphasis);
    --input-helper-color-disabled: var(--input-helper-color);
    --input-helper-color-invalid: var(--text-error);
    --input-helper-size: var(--text-size-sm);
    --input-helper-line-height: var(--line-height-sm);
    --input-helper-weight: var(--font-weight-normal);
    --input-helper-weight-disabled: var(--input-helper-weight);
    --input-helper-weight-invalid: var(--font-weight-bold);
    --input-helper-surface: transparent;
    --input-helper-surface-invalid: var(--surface-error);

    --input-char-limit-color: var(--text-medium-emphasis);

    --input-clear-surface: var(--surface-controls-default);
    --input-clear-surface-hover: var(--surface-controls-dark);
    --input-clear-color: var(--white);

    --input-width: 20rem;
    --input-spacing: 0.25rem;
    --input-padding: 1rem;
    --input-padding-small: 0.5rem;
    --input-border-width: 1px;
    --input-border-width-active: 2px;
    --input-radius: var(--radius-size-sm);
    --input-radius-full: var(--radius-size-full);

    --input-min-height: calc(
      var(--input-field-line-height) + (2 * var(--input-padding-small)) +
        (2 * var(--input-border-width))
    );
  }

  .input-wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--input-spacing);
    width: var(--input-width);
    position: relative;
  }

  .input-field-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }

  .input-clear-button {
    position: absolute;
    right: var(--input-padding);
    background: var(--input-clear-surface);
    border: none;
    padding: 0;
    cursor: pointer;
    display: grid;
    place-items: center;
    color: var(--input-clear-color);
    height: var(--input-field-size);
    width: var(--input-field-size);
    border-radius: var(--input-radius-full);
  }

  .input-clear-button:hover {
    background: var(--input-clear-surface-hover);
  }

  .input-clear-button .input-icon {
    height: 75%;
    width: 75%;
    display: block;
  }

  .input-field-wrapper .input-field {
    padding-right: calc(
      var(--input-padding) * 2 + var(--input-field-line-height)
    );
  }

  .input-label {
    color: var(--input-label-color);
    font-size: var(--input-label-size);
    line-height: var(--input-label-line-height);
    font-weight: var(--input-label-weight);
    margin: 0;
    padding-left: var(--input-padding);
  }

  .input-wrapper:has(textarea) .input-label {
    padding-left: 0;
  }

  .input-field {
    width: 100%;
    padding: var(--input-padding-small) var(--input-padding);
    background-color: var(--input-field-surface);
    box-shadow: inset 0 0 0 var(--input-border-width) var(--input-field-border);
    border-radius: var(--input-radius);
    border: none;
    color: var(--input-field-color);
    font-size: var(--input-field-size);
    line-height: var(--input-field-line-height);
    font-weight: var(--input-field-weight);
  }

  .input-field:hover {
    background-color: var(--input-field-surface-hover);
    box-shadow: inset 0 0 0 var(--input-border-width-active)
      var(--input-field-border-hover);
  }

  .input-field:focus {
    outline: none;
    box-shadow: inset 0 0 0 var(--input-border-width-active)
      var(--input-field-border-active);
  }

  .input-field:focus-visible {
    outline: 2px solid var(--input-field-border-focus);
    outline-offset: 1px;
  }

  .input-field::placeholder {
    color: var(--input-field-placeholder);
  }

  .input-helper-wrapper {
    display: flex;
    align-items: center;
    gap: var(--input-spacing);
    padding: 0 var(--input-padding);
    background: var(--input-helper-surface);
  }

  .input-helper-content {
    display: flex;
    align-items: center;
    gap: var(--input-spacing);
  }

  .input-wrapper:has(textarea) .input-helper-wrapper {
    padding: 0;
    justify-content: space-between;
  }

  .input-helper,
  .input-error {
    font-size: var(--input-helper-size);
    line-height: var(--input-helper-line-height);
    font-weight: var(--input-helper-weight);
    margin: 0;
  }

  .input-helper {
    color: var(--input-helper-color);
  }

  .input-error {
    display: none;
    color: var(--input-helper-color-invalid);
    font-weight: var(--input-helper-weight-invalid);
  }

  .input-error-icon {
    height: var(--input-helper-line-height);
    width: var(--input-helper-line-height);
    color: var(--input-helper-color-invalid);
    display: none;
    flex-shrink: 0;
  }

  .input-wrapper:has(.input-field[aria-invalid='true']) {
    & .input-label {
      color: var(--input-label-color-invalid);
      font-weight: var(--input-label-weight-invalid);
    }

    & .input-field {
      color: var(--input-field-color-invalid);
      font-weight: var(--input-field-weight-invalid);
      background-color: var(--input-field-surface-invalid);
      box-shadow: inset 0 0 0 var(--input-border-width-active)
        var(--input-field-border-invalid);
    }

    & .input-field:hover {
      box-shadow: inset 0 0 0 var(--input-border-width-active)
        var(--input-field-border-invalid);
    }

    & .input-helper-wrapper {
      background: var(--input-helper-surface-invalid);
      padding: var(--input-padding-small) var(--input-padding);
    }

    & .input-helper {
      color: var(--input-helper-color-invalid);
      font-weight: var(--input-helper-weight-invalid);
    }

    & .input-error {
      display: flex;
    }

    & .input-error-icon {
      display: flex;
    }
  }

  .input-wrapper:has(.input-error):has(.input-field[aria-invalid='true']) {
    & .input-helper {
      display: none;
    }
  }

  .input-field:disabled {
    pointer-events: none;
    opacity: 0.5;
    background-color: var(--input-field-surface-disabled);
    box-shadow: inset 0 0 0 var(--input-border-width)
      var(--input-field-border-disabled);
    color: var(--input-field-color-disabled);
    font-weight: var(--input-field-weight-disabled);
  }

  .input-wrapper:has(.input-field:disabled) {
    & .input-helper-wrapper {
      display: none;
    }

    & .input-label {
      color: var(--input-label-color-disabled);
      font-weight: var(--input-label-weight-disabled);
    }
  }

  input-char-limit {
    color: var(--input-char-limit-color);
    font-size: var(--input-helper-size);
    line-height: var(--input-helper-line-height);
    font-weight: var(--input-helper-weight);
    margin: 0;
  }

  /* Override error state background for textarea */
  .input-wrapper:has(textarea):has(.input-field[aria-invalid='true'])
    .input-helper-wrapper {
    background: transparent;
    padding: 0;
  }

  /* Override disabled state for textarea */
  .input-wrapper:has(textarea):has(.input-field:disabled) {
    & .input-helper-wrapper {
      display: flex;
    }

    & .input-helper {
      color: var(--input-label-color-disabled);
    }

    & .input-label {
      color: var(--input-label-color);
      font-weight: var(--input-label-weight);
    }
  }

  /* Ensure character limit stays the same color in error state */
  .input-wrapper:has(.input-field[aria-invalid='true']) .input-char-limit {
    color: var(--input-char-limit-color);
  }

  .input-wrapper textarea.input-field {
    min-height: var(--input-min-height);
    resize: vertical;
  }
}
