@layer components {
  :root {
    --drawer-backdrop-color: rgba(0, 0, 0, 0.3);
    --drawer-text-color: var(--color-text-black);
    --drawer-text-title-color: var(--color-text-high-emphasis);
    --drawer-text-body-color: var(--color-text-medium-emphasis);
    --drawer-surface: var(--color-surface-cards);
    --drawer-backdrop-blur: 4px;
    --drawer-text-title-size: var(--text-size-md);
    --drawer-text-title-weight: var(--font-weight-semi-bold);
    --drawer-text-title-line-height: var(--line-height-md);
    --drawer-text-body-size: var(--text-size-body);
    --drawer-text-body-weight: var(--font-weight-normal);
    --drawer-text-body-line-height: var(--line-height-body);
    --drawer-text-close-button-size: var(--text-size-md);
    --drawer-text-close-button-weight: var(--font-weight-normal);
    --drawer-text-close-button-line-height: var(--line-height-md);
    --drawer-width-min: 320px;
    --drawer-width-max: 80vw;
    --drawer-margin: 2rem;
    --drawer-padding: 2rem;
    --drawer-mobile-padding: 1rem;
    --drawer-mobile-margin: 0rem;
    --drawer-mobile-max-width: 80vw;
    --drawer-hero-width: 18rem;
    --drawer-mobile-hero-height: 150px;
    --drawer-animation-speed: var(--duration-speed-slow);
    --drawer-top-right-radius: var(--radius-size-none);
    --drawer-bottom-right-radius: var(--radius-size-none);
    --drawer-shadow: var(--shadow-2xl);
    --drawer-shadow-mobile: var(--shadow-2xl);
  }

  .drawer {
    position: fixed;
    left: 0% !important;
    min-height: 100vh;
    max-height: 100vh;
    max-width: var(--drawer-width-max);
    display: flex;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    background-color: transparent;
    padding: 0;
    border: none;
    margin: 0;
    overflow: hidden;
    will-change: opacity;
    transition: opacity var(--drawer-animation-speed) ease;
    color: var(--drawer-text-color);
  }

  .drawer::backdrop {
    background-color: var(--drawer-backdrop-color);
    -webkit-backdrop-filter: blur(var(--drawer-backdrop-blur));
    backdrop-filter: blur(var(--drawer-backdrop-blur));
    opacity: 0;
    transition: opacity var(--drawer-animation-speed) ease;
  }

  .drawer[open] {
    opacity: 1;
    visibility: visible;
  }

  .drawer[open]::backdrop {
    opacity: 1;
  }

  .drawer[open] .drawer-box {
    transform: translateX(0%);
  }

  .drawer:not([open]) {
    transform: translateX(-100%);
  }

  .drawer-box {
    width: min(fit-content, calc(100vw - (var(--drawer-margin, 2rem) * 2)));
    min-height: 100vh;
    background: var(--drawer-surface);
    padding: var(--drawer-padding);
    border-top-right-radius: var(--drawer-top-right-radius);
    border-bottom-right-radius: var(--drawer-bottom-right-radius);
    box-shadow: var(--drawer-shadow);
    max-height: calc(100vh - 2 * var(--drawer-margin));
    overflow-y: auto;
    position: relative;
    transform: translateX(-100%);
    transition: all var(--drawer-animation-speed) ease;
    z-index: 2;
    display: flex;
    flex-direction: column;
    margin: 0;
    will-change: transform;
  }

  .drawer-control-bar {
    display: flex;
    justify-content: flex-end;
    padding-bottom: 1rem;
    margin-top: -0.5rem;
  }

  .drawer-title {
    color: var(--modal-text-title-color);
    font-size: var(--modal-text-title-size);
    line-height: var(--modal-text-title-line-height);
    font-weight: var(--modal-text-title-weight);
    margin-bottom: 1rem;
  }

  .drawer-backdrop-click {
    position: fixed;
    inset: 0;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .drawer-backdrop-click button {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    appearance: none;
    border: none;
    padding: 0;
    margin: 0;
    background: transparent;
    cursor: default;
  }

  .drawer-close-button {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--drawer-text-body-color);
    font-size: var(--drawer-text-close-button-size);
    font-weight: var(--drawer-text-close-button-weight);
    line-height: var(--drawer-text-close-button-line-height);
    height: var(--drawer-text-close-button-line-height);
    transition: color var(--drawer-animation-speed) ease;
  }

  .drawer-close-button:hover {
    color: var(--drawer-text-title-color);
  }

  .drawer-disable-entrance .drawer-box {
    transform: none !important;
  }

  .drawer-disable-entrance[open] .drawer-box {
    transform: none !important;
  }

  @media screen and (max-width: 640px) {
    .drawer {
      position: fixed !important;
      transform: none !important;
      align-items: flex-end;
      padding: 0;
      width: 100vw !important;
      max-width: var(--drawer-mobile-max-width) !important;
      min-height: 100vh !important;
      max-height: 100vh;
      margin: 0 !important;
    }

    .drawer-box {
      display: flex;
      width: 80vw !important;
      max-width: 80vw;
      margin: 0 var(--drawer-mobile-margin) !important;
      min-height: 100vh !important;
      max-height: 100vh !important;
      border-radius: 0 var(--drawer-radius) var(--drawer-radius) 0;
      transform: translateX(-100%);
      transition: transform var(--drawer-animation-speed) ease;
      box-shadow: var(--drawer-shadow-mobile) !important;
      padding: var(--drawer-mobile-padding);
    }

    .drawer:not([open]) {
      transform: translateX(-100%);
      transition: transform var(--drawer-animation-speed) ease;
    }

    .drawer[open] .drawer-box {
      transform: translateX(0);
    }
  }
}
