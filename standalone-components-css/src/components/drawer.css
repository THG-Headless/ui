@layer components {
  :root {
    --drawer-backdrop-color: rgba(0, 0, 0, 0.3);
    --drawer-backdrop-blur: 4px;
    --drawer-width-min: 320px;
    --drawer-width-max: 80vw;
    --drawer-margin: 2rem;
    --drawer-padding: 2rem;
    --drawer-mobile-padding: 1rem;
    --drawer-mobile-margin: 0rem;
    --drawer-mobile-max-width: 80vw;
    --drawer-hero-width: 18rem;
    --drawer-mobile-hero-height: 150px;
    --drawer-animation-speed: var(--duration-speed-slow);
    --drawer-radius: var(--radius-site);
    --drawer-shadow: var(--shadow-site);
    --drawer-shadow-mobile: var(--shadow-site);
  }

  .drawer {
    position: fixed;
    left: 0% !important;
    min-height: 100vh;
    max-height: 100vh;
    max-width: var(--drawer-width-max);
    display: flex;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    padding: 0;
    border: none;
    margin: 0;
    overflow: hidden;
    will-change: opacity;
    transition: opacity var(--drawer-animation-speed) ease;
    background-color: transparent !important;

    & > * {
      background-color: var(--color-background);
      border-color: var(--color-border);
      color: var(--color-foreground);
    }
  }

  .drawer::backdrop {
    background-color: var(--drawer-backdrop-color) !important;
    -webkit-backdrop-filter: blur(var(--drawer-backdrop-blur));
    backdrop-filter: blur(var(--drawer-backdrop-blur));
    opacity: 0;
    transition: opacity var(--drawer-animation-speed) ease;
  }

  .drawer[open] {
    opacity: 1;
    visibility: visible;
  }

  .drawer[open]::backdrop {
    opacity: 1;
  }

  .drawer[open] .drawer-box {
    transform: translateX(0%);
  }

  .drawer:not([open]) {
    transform: translateX(-100%);
  }

  .drawer-box {
    width: min(fit-content, calc(100vw - (var(--drawer-margin, 2rem) * 2)));
    min-height: 100vh;
    padding: var(--drawer-padding);
    border-top-right-radius: var(--drawer-radius);
    border-bottom-right-radius: var(--drawer-radius);
    box-shadow: var(--drawer-shadow);
    max-height: calc(100vh - 2 * var(--drawer-margin));
    overflow-y: auto;
    position: relative;
    transform: translateX(-100%);
    transition: all var(--drawer-animation-speed) ease;
    z-index: 2;
    display: flex;
    flex-direction: column;
    margin: 0;
    will-change: transform;
  }

  .drawer-control-bar {
    display: flex;
    justify-content: flex-end;
    padding-bottom: 1rem;
    margin-top: -0.5rem;
  }

  .drawer-backdrop-click {
    position: fixed;
    inset: 0;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: transparent !important;
  }

  .drawer-backdrop-click button {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    appearance: none;
    border: none;
    padding: 0;
    margin: 0;
    background: transparent;
    cursor: default;
  }

  .drawer-disable-entrance .drawer-box {
    transform: none !important;
  }

  .drawer-disable-entrance[open] .drawer-box {
    transform: none !important;
  }

  @media screen and (max-width: 640px) {
    .drawer {
      position: fixed !important;
      transform: none !important;
      align-items: flex-end;
      padding: 0;
      width: 100vw !important;
      max-width: var(--drawer-mobile-max-width) !important;
      min-height: 100vh !important;
      max-height: 100vh;
      margin: 0 !important;
    }

    .drawer-box {
      display: flex;
      width: var(--drawer-mobile-max-width) !important;
      max-width: var(--drawer-mobile-max-width);
      margin: 0 var(--drawer-mobile-margin) !important;
      min-height: 100vh !important;
      max-height: 100vh !important;
      border-radius: 0 var(--drawer-radius) var(--drawer-radius) 0;
      transform: translateX(-100%);
      transition: transform var(--drawer-animation-speed) ease;
      box-shadow: var(--drawer-shadow-mobile);
      padding: var(--drawer-mobile-padding);
    }

    .drawer:not([open]) {
      transform: translateX(-100%);
      transition: transform var(--drawer-animation-speed) ease;
    }

    .drawer[open] .drawer-box {
      transform: translateX(0);
    }
  }
}
