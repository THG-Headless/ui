---
// Define the colors with their properties and explicit values
const colors = [
  {
    name: 'Primary',
    variable: '--color-primary',
    value: 'oklch(0.43 0.0147 248.17)',
    color: 'oklch(0.43 0.0147 248.17)',
  },
  {
    name: 'Secondary',
    variable: '--color-secondary',
    value: 'oklch(0.67 0.15 250)',
    color: 'oklch(0.67 0.15 250)',
  },
  {
    name: 'Tertiary',
    variable: '--color-tertiary',
    value: 'oklch(0.65 0.2 300)',
    color: 'oklch(0.65 0.2 300)',
  },
  {
    name: 'Neutral',
    variable: '--color-neutral',
    value: 'oklch(0.64 0 0)',
    color: 'oklch(0.64 0 0)',
  },
  {
    name: 'Success',
    variable: '--color-success',
    value: 'oklch(0.5 0.15 150)',
    color: 'oklch(0.5 0.15 150)',
  },
  {
    name: 'Attention',
    variable: '--color-attention',
    value: 'oklch(0.55 0.12 250)',
    color: 'oklch(0.55 0.12 250)',
  },
  {
    name: 'Error',
    variable: '--color-error',
    value: 'oklch(0.55 0.2 30)',
    color: 'oklch(0.55 0.2 30)',
  },
  {
    name: 'Promotion',
    variable: '--color-promotion',
    value: 'oklch(0.6 0.25 30)',
    color: 'oklch(0.6 0.25 30)',
  },
];
---

<div
  style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px; padding-top: 30px"
>
  {
    colors.map((color) => (
      <div style="display: flex; margin-top: 0px; ">
        <div
          style={`background-color: ${color.color}; 
                        width: 80px;
                        height: 100%;
                        flex-shrink: 0;
                        border-radius: 10px;
                        margin-right: 10px;`}
          aria-label={`${color.name} color`}
        />
        <div style="margin-top:0px">
          <strong style="margin-bottom:10px">{color.name}</strong>
          <div>
            <p>{color.value}</p>
            <code>{color.variable}</code>
          </div>
        </div>
      </div>
    ))
  }
</div>
