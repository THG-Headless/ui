---
import '../../tailwind.css';
import fs from 'node:fs';
import path from 'node:path';
import { parseTypographyScheme } from '../../utils/typographyParser';

const cssFilePath = path.resolve('./src/sample-css/typography.css');
const cssContent = fs.readFileSync(cssFilePath, 'utf-8');
const typography = parseTypographyScheme(cssContent);

interface FontSize {
  size?: string;
  lineHeight?: string;
}

function groupFontSizes(
  variables: Array<{ name: string; value: string }>
): [string, FontSize][] {
  const grouped: Record<string, FontSize> = {};
  variables.forEach((v) => {
    const baseName = v.name
      .replace('--text-', '')
      .replace('--line-height-', '')
      .replace('-desktop-', '')
      .replace('-mobile-', '');
    if (!grouped[baseName]) grouped[baseName] = {};
    if (v.name.startsWith('--text-')) grouped[baseName].size = v.value;
    if (v.name.startsWith('--line-height-'))
      grouped[baseName].lineHeight = v.value;
  });
  return Object.entries(grouped);
}

const groupedDesktopFontSizes = groupFontSizes(typography.sizes.variables);
const groupedMobileFontSizes = groupFontSizes(typography.mobileSizes.variables);
const groupedResponsiveFontSizes = groupFontSizes(
  typography.responsiveSizes.variables
);
---

<div class="max-w-7xl mx-auto p-6">
  <h1 class="text-2xl font-bold !mt-8 text-black">Typography Variables</h1>
  <p class="text-black pb-6">
    In order to update the appearance of your typography, the primitive
    typography variables below can be updated. Line height and text size are
    combined when using the classes such as `text-xl`
  </p>

  <section class="mb-12">
    <h3 class="text-xl font-semibold pb-6 pt-4 text-black">
      Desktop Font Sizes
    </h3>
    <div class="space-y-8">
      {
        groupedDesktopFontSizes.map(([name, values]) => (
          <div class="grid grid-cols-6 items-center pb-4">
            <div class="col-span-3">
              <div class="font-mono text-sm text-black">{`--text-${name}`}</div>
              <div class="font-mono text-sm text-black">{`--line-height-desktop-${name}`}</div>
            </div>
            <div
              class="col-span-2 text-black pl-8 border-t border-b border-zinc-300"
              style={`font-size: ${values.size}; line-height: ${values.lineHeight};`}
            >
              Altitude
            </div>
            <div class="col-span-1 text-right font-mono text-sm text-gray-600">
              <div>{values.size}</div>
              <div>{values.lineHeight}</div>
            </div>
          </div>
        ))
      }
    </div>
  </section>

  <section class="mb-12">
    <h3 class="text-xl font-semibold pb-6 pt-4 text-black">
      Mobile Font Sizes
    </h3>
    <div class="space-y-8">
      {
        groupedMobileFontSizes.map(([name, values]) => (
          <div class="grid grid-cols-6 items-center pb-4">
            <div class="col-span-3">
              <div class="font-mono text-sm text-black">{`--text-${name}`}</div>
              <div class="font-mono text-sm text-black">{`--line-height-mobile-${name}`}</div>
            </div>
            <div
              class="col-span-2 text-black pl-8 border-t border-b border-zinc-300"
              style={`font-size: ${values.size}; line-height: ${values.lineHeight};`}
            >
              Altitude
            </div>
            <div class="col-span-1 text-right font-mono text-sm text-gray-600">
              <div>{values.size}</div>
              <div>{values.lineHeight}</div>
            </div>
          </div>
        ))
      }
    </div>
  </section>

  <section class="mb-12">
    <h3 class="text-xl font-semibold pt-4 text-black">Responsive Font Sizes</h3>
    <p class="text-black pb-6">
      These pull from the above primitives so don't need updating., They
      responsively switch between desktop and mobile variables based on screen
      width.
    </p>
    <div class="space-y-8">
      {
        groupedResponsiveFontSizes.map(([name, values]) => (
          <div class="grid grid-cols-6 items-center pb-4">
            <div class="col-span-3">
              <div class="font-mono text-sm text-black">{`--text-${name}`}</div>
              <div class="font-mono text-sm text-black">{`--line-height-${name}`}</div>
            </div>
            <div
              class="col-span-2 text-black pl-8 border-t border-b border-zinc-300"
              style={`font-size: var(--text-${name}); line-height: var(--line-height-${name});`}
            >
              Altitude
            </div>
            <div class="col-span-1 text-right font-mono text-sm text-gray-600" />
          </div>
        ))
      }
    </div>
  </section>

  <section class="mb-12">
    <h3 class="text-xl font-semibold pb-6 pt-4 text-black">Font Weights</h3>
    <div class="space-y-4">
      {
        typography.weights.variables.map((weight) => (
          <div class="grid grid-cols-6 items-center pb-2">
            <div class="col-span-3 font-mono text-sm text-black">
              {weight.name}
            </div>
            <div
              class="col-span-2 text-lg text-black pl-8"
              style={`font-weight: ${weight.value};`}
            >
              Altitude
            </div>
            <div class="col-span-1 text-right font-mono text-sm text-gray-600">
              {weight.value}
            </div>
          </div>
        ))
      }
    </div>
  </section>
</div>
